#!/bin/sh
################################################################################
#
# Wikimedia Foundation
#
# LICENSE
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# @license		http://www.gnu.org/copyleft/gpl.html GNU GENERAL PUBLIC LICENSE
# @author		Jeremy Postlethwaite <jpostlethwaite@wikimedia.org>
#
################################################################################
#
# This is the distributed configuration file. If you need to make changes to 
# these settings, copy this file to this directory and remove the ".dist" 
# extension.
#
################################################################################
#
# @var string $UNITTEST_HOSTNAME	The hostname to the webserver.
#
: ${UNITTEST_HOSTNAME:="localhost"}
#
# @var string $UNITTEST_URL	The url to the webserver. You need the trailing 
# slash.
#
: ${UNITTEST_URL:="http://localhost/extensions/UnitTest/tests/"}
#
# @var string $PHPUNIT	If phpunit.php is not within your shell $PATH, you may
# specify the full path here.
#
: ${PHPUNIT:="phpunit.php"}
#
# @var string $PHPUNIT_OPTS	By default, all testing will be run in verbose mode.
#
: ${PHPUNIT_OPTS:="--verbose"}
#
# @var string $PHPUNIT_LIST_GROUPS	Specify the relative path to the file in 
# which you want to list groups designated by the doctag @group
#
: ${PHPUNIT_LIST_GROUPS:"=AllTests.php"}
#
# @var string $PHPUNIT_FILE	Specify the relative path to the test in which you 
# want to run. You need to omit the ".php" extension.
#
: ${PHPUNIT_FILE:="AllTests"}
#
# @var string $PHPUNIT_COVERAGE_HTML	The relative path to the code coverage 
# html directory 
#
# This is where code coverage will be saved if the flag -ch is passed. If you wish to specify a full path, use:
# --coverage-html "/some/absolute/path"
#
# These directories will need to exist, they will not be created.
#
: ${PHPUNIT_COVERAGE_HTML:="logs/coverage/html"}
#
# @var string $PHPUNIT_COVERAGE_CLOVER	The relative path to the code coverage 
# clover directory 
#
# This is where code coverage will be saved if the flag -ch is passed. If you wish to specify a full path, use:
# --coverage-clover "/some/absolute/path"
#
# These directories will need to exist, they will not be created.
#
: ${PHPUNIT_COVERAGE_CLOVER:="logs/coverage/clover/index.xml"}
#
# @var string $PHPUNIT_TESTDOX_HTML	The relative path to the testdox output html
# directory. It is okay to put this the same directory as html coverage. 
#
# This is where testdox will be saved if the flag -tdh is passed. If you wish to specify a full path, use:
# --testdox-html "/some/absolute/path"
#
# These directories will need to exist, they will not be created.
#
: ${PHPUNIT_TESTDOX_HTML:="logs/coverage/html/testdox.html"}
#
# @var string $PHPUNIT_LOG_JSON	The relative path to the log output json
# directory. 
#
# This is where log.json will be saved if the flag -ljs is passed. If you wish to specify a full path, use:
# --log-json "/some/absolute/path"
#
# These directories will need to exist, they will not be created.
#
: ${PHPUNIT_LOG_JSON:="logs/coverage/results/log.json"}
#
# @var string $PHPUNIT_LOG_JUNIT	The relative path to the log output junit
# directory. 
#
# This is where log.xml will be saved if the flag -lju is passed. If you wish to specify a full path, use:
# --log-junit "/some/absolute/path"
#
# These directories will need to exist, they will not be created.
#
: ${PHPUNIT_LOG_JUNIT:="logs/coverage/results/log.xml"}
#
# @var string $PHPUNIT_LOG_TAP	The relative path to the log output tap
# directory. 
#
# This is where log.tap will be saved if the flag -ljs is passed. If you wish to specify a full path, use:
# --log-tap "/some/absolute/path"
#
# These directories will need to exist, they will not be created.
#
: ${PHPUNIT_LOG_TAP:="logs/coverage/results/log.tap"}

